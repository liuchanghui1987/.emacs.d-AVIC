#s(hash-table size 65 test eql rehash-size 1.5 rehash-threshold 0.8 data (mwheel-scroll (("list-packages" "elpamr-create-mirror-for-installed") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("elpamr-create-mirror-for-installed" 1 "list-packages" 1))) keyboard-quit (("elpamr-create-mirror-for-installed" "elpamr-create-mirror-for-installed" "elpamr-create-mirror-for-installed" "elpamr-create-mirror-for-installed") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("elpamr-create-mirror-for-installed" 4))) elpamr-create-mirror-for-installed (("c:/Users/Administrator/Desktop/test" "c:/Users/Administrator/Desktop/test" "c:/Users/Administrator/Desktop/test" "c:/Users/Administrator/Desktop/test" "c:/Users/Administrator/Desktop/test") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("c:/Users/Administrator/Desktop/test" 5))) self-insert-command (("c:/Users/Administrator/Desktop/test") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("c:/Users/Administrator/Desktop/test" 1))) nil (("ido-toggle-virtual-buffers" "ido-toggle-virtual-buffers" "raw-text" "raw-text" "raw-text") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("raw-text" 3 "ido-toggle-virtual-buffers" 2))) evil-mouse-drag-region (("align-regexp") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("align-regexp" 1))) mouse-set-point (("el-get-check-recipe" "auto-insert") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("auto-insert" 1 "el-get-check-recipe" 1))) next-line (("evil-open-fold") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("evil-open-fold" 1))) evil-open-fold (("Info-virtual-index") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("Info-virtual-index" 1))) kill-buffer (("*Messages*" "*Warnings*" "custom.el" "*Packages*" "*Help*" "subr.el" "async_fifo_show_ahead_wr_task_logic.v" "org-clock-save.el" "loaddefs.el" "async_fifo_show_ahead.v") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("simple.el" 1 "*Messages*" 1 "*Warnings*" 1 "custom.el" 1 "*Packages*" 1 "*Help*" 1 "subr.el" 1 "async_fifo_show_ahead_wr_task_logic.v" 1 "org-clock-save.el" 1 "loaddefs.el" 1 "async_fifo_show_ahead.v" 1))) counsel-describe-variable (("customize-package-emacs-version-alist") . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("customize-package-emacs-version-alist" 1)))))